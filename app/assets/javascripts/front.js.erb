//Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.
// You can use CoffeeScript in this file: http://coffeescript.org/


$(document).ready(function (){
    var map = new OpenLayers.Map('map');
    var fromProjection  = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
    var toProjection    = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
    var position        = new OpenLayers.LonLat(-0.11,51.51).transform( fromProjection, toProjection);
    var zoom            = 12; 
    var lonLat          = new Array();
    //var markers         = new OpenLayers.Layer.Markers( "Markers" );

    map.addLayer(new OpenLayers.Layer.OSM());
    //map.addLayer(markers);

    var style_green = {
        strokeColor: "#000000",
        strokeWidth: 1,
        strokeDashstyle: "dashdot",
        pointRadius: 6,
        pointerEvents: "visiblePainted",
        title: "this is a green line"
    };

        /*
     * Layer style
     */
    // we want opaque external graphics and non-opaque internal graphics
    var layer_style = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);
    layer_style.fillOpacity = 0.2;
    layer_style.graphicOpacity = 1;


    var renderer = OpenLayers.Util.getParameters(window.location.href).renderer;
    renderer = (renderer) ? [renderer] : OpenLayers.Layer.Vector.prototype.renderers;

    var vectorLayer = new OpenLayers.Layer.Vector("Simple Geometry", {
        style: layer_style,
        renderers: renderer
    });

    map.addLayer(vectorLayer);
    map.setCenter(position, zoom);
    for(var j = 0; j < gon.objects.length; j++)
    {
        var pointList = [];
        for(var i = 0; i < gon.objects[j]['shape'].length; i += 5) 
        {
            var point = new OpenLayers.Geometry.Point(gon.objects[j]['shape'][i]['long'], gon.objects[j]['shape'][i]['lat']).transform( fromProjection, toProjection);
            pointList.push(point);
        }
        pointList.push(pointList[0]);
        //console.log(pointList);
        var linearRing = new OpenLayers.Geometry.LinearRing(pointList);
        var polygonFeature = new OpenLayers.Feature.Vector(
            new OpenLayers.Geometry.Polygon([linearRing]));
        var lineFeature = new OpenLayers.Feature.Vector(
            new OpenLayers.Geometry.LineString(pointList),null,style_green);
        vectorLayer.addFeatures(polygonFeature);
        vectorLayer.addFeatures(lineFeature);
    }

    //This is a hack, and I don't like it, but whatever
    //It's necessary because OpenLayers flatly refuses to load into a % width div
    $('.front .map-container').css('height', $(window).height() * 0.8);
});

//Resizes the map after a short delay.
//window.onresize = function()
//{
// setTimeout( 
//  	function() { 
//  		$('.front .map-container').css('height', $(window).height() * 0.8);
//  		map.updateSize();
//  	}, 200);
//}