//Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.
// You can use CoffeeScript in this file: http://coffeescript.org/

var globalMap;
$(document).ready(function (){


    borough_fill_style.addRules([rule1, rule2, rule3, rule4]);

    var renderer = OpenLayers.Util.getParameters(window.location.href).renderer;
    renderer = (renderer) ? [renderer] : OpenLayers.Layer.Vector.prototype.renderers;

    var vectorLayer = new OpenLayers.Layer.Vector("Simple Geometry", {
        styleMap: new OpenLayers.StyleMap({'default': borough_fill_style}),
        renderers: renderer
    });
    console.log(borough_fill_style);
    map.addLayer(vectorLayer);
    map.setCenter(position, zoom);

    for(var j = 0; j < gon.boroughs.length; j++)
    {
        var pointList = [];
        for(var i = 0; i < gon.boroughs[j]['shape'].length; i++) 
        {
            var point = new OpenLayers.Geometry.Point(gon.boroughs[j]['shape'][i]['long'], gon.boroughs[j]['shape'][i]['lat']).transform( fromProjection, toProjection);
            pointList.push(point);
        }
        pointList.push(pointList[0]);
        //console.log(pointList);
        var linearRing = new OpenLayers.Geometry.LinearRing(pointList);

        var polygonFeature = new OpenLayers.Feature.Vector(
            new OpenLayers.Geometry.Polygon([linearRing]), 
            {
                'name': gon.boroughs[j]['record']['DeletionFlag'].replace("London Boro", ""),
                'styleNum': Math.floor((Math.random() * 10)) % 4 + 1,
                'align': 'rt'
            });
        //console.log(polygonFeature);
            //borough_fill_style);//,
        	//style);

        var numPoints = gon.boroughs[j]['shape'].length;
        var vertMid = Math.abs(gon.boroughs[j]['shape'][Math.floor(numPoints/2)] - gon.boroughs[j]['shape'][0]) / 2;
        var horizMid = Math.abs(gon.boroughs[j]['shape'][Math.floor(numPoints/4)] + gon.boroughs[j]['shape'][Math.floor(3*numPoints/4)]) / 2;
        var textPoint = new OpenLayers.Geometry.Point(vertMid, horizMid).transform( fromProjection, toProjection);

        //polygonFeature.attributes = 

        var lineFeature = new OpenLayers.Feature.Vector(
            new OpenLayers.Geometry.LineString(pointList),null, basic_line);
        vectorLayer.addFeatures(polygonFeature);
        vectorLayer.addFeatures(lineFeature);



    }

    for(var j = 0; j < gon.wards.length; j++)
    {
        var pointList = [];
        for(var i = 0; i < gon.wards[j]['shape'].length; i++) 
        {
            var point = new OpenLayers.Geometry.Point(gon.wards[j]['shape'][i]['long'], gon.wards[j]['shape'][i]['lat']).transform( fromProjection, toProjection);
            pointList.push(point);
        }
        pointList.push(pointList[0]);
        //console.log(pointList);
        var linearRing = new OpenLayers.Geometry.LinearRing(pointList);
        var style;

        var lineFeature = new OpenLayers.Feature.Vector(
            new OpenLayers.Geometry.LineString(pointList),null, ward_line);
        vectorLayer.addFeatures(polygonFeature);
        vectorLayer.addFeatures(lineFeature);
    }

    //This is a hack, and I don't like it, but whatever
    //It's necessary because OpenLayers flatly refuses to load into a % width div
    $('.front .map-container').css('height', $(window).height() * 0.8);
    globalMap.updateSize();
});

//Resizes the map after a short delay.
window.onresize = function()
{
 setTimeout( 
  	function() { 
      
  	$('.front .map-container').css('height', $(window).height() * 0.8);
     globalMap.updateSize();
//  		map.updateSize();
  	}, 200);
}