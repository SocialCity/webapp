//Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.
// You can use CoffeeScript in this file: http://coffeescript.org/


$(document).ready(function (){
	var map = new OpenLayers.Map('map');
    var fromProjection = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
    var toProjection   = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
	var position       = new OpenLayers.LonLat(-0.11,51.51).transform( fromProjection, toProjection);
    var zoom           = 12; 



    map.addLayer(new OpenLayers.Layer.OSM());
   // map.setCenter(position, zoom);

 //    p1 = OpenLayers.Geometry.Point(470000.1, 206910.3);
 //    p2 = OpenLayers.Geometry.Point(460000.4, 205503.8);
 //    p3 = OpenLayers.Geometry.Point(450000.7, 206663.7);

 //    bounds = new OpenLayers.Bounds();
	// bounds.extend(p1);
	// bounds.extend(p2);
	// bounds.extend(p3);
	// bounds.toBBOX(); // returns 4,5,5,6

	// var markers = new OpenLayers.Layer.Markers("Markers")
	// map.addLayer(markers);
	// markers.addMarker(new OpenLayers.Marker.Box(bounds));

  var lonLat = new Array();

 var markers = new OpenLayers.Layer.Markers( "Markers" );
  map.addLayer(markers);

  for(var j = 0; j < 20; j++)
  {
    count = 0;
    for (var i = 0; i < gon.objects[j]['shape'].length; i += 100)
    {
        //console.log(obj['shape'][i]['long'], obj['shape'][i]['lat']);
        lonLat.push(new OpenLayers.LonLat(gon.objects[j]['shape'][i]['long'], gon.objects[j]['shape'][i]['lat']).transform(
                new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
                map.getProjectionObject() // to Spherical Mercator Projection
              ));


        markers.addMarker(new OpenLayers.Marker(lonLat[count]));
        count++;
    }
  }

 
    
 
    map.setCenter (lonLat[0], zoom);

    //This is a hack, and I don't like it, but whatever
    //It's necessary because OpenLayers flatly refuses to load into a % width div
    $('.front .map-container').css('height', $(window).height() * 0.8);

    //For each 


});

//Resizes the map after a short delay.
window.onresize = function()
{
  setTimeout( 
  	function() { 
  		$('.front .map-container').css('height', $(window).height() * 0.8);
  		map.updateSize();
  	}, 200);
}