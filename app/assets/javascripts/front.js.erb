//Place all the behaviors and hooks related to the matching controller here.
// All this logic will automatically be available in application.js.
// You can use CoffeeScript in this file: http://coffeescript.org/

var globalMap;
$(document).ready(function (){
    var fromProjection  = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
    var toProjection    = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection

    globalMap = intialise_map();

    //Initialise styles, rules and layers
    var style_array = setup_styles();
    var borough_fill_style = style_array['borough_fill_style'];
    var ward_fill_style = style_array['ward_fill_style'];
    var ward_select_style = style_array['ward_select_style'];

    var rule_array = setup_rules();
    borough_fill_style.addRules([rule_array['rule1'], rule_array['rule2'], rule_array['rule3'], rule_array['rule4']]); 
    
    var layers = setup_layers(globalMap, borough_fill_style, ward_fill_style, ward_select_style);
    var borough_layer = layers['borough_layer'];
    var ward_layer = layers['ward_layer'];

    plot_regions(globalMap, borough_layer, gon.boroughs, "London Boro", fromProjection, toProjection);
    plot_regions(globalMap, ward_layer, gon.wards, "Ward", fromProjection, toProjection);

    
    setup_controls(globalMap, ward_layer);

    console.log(ward_layer);
    //This is a hack, and I don't like it, but whatever
    //It's necessary because OpenLayers flatly refuses to load into a % width div
    $('.front .map-container').css('height', $(window).height() * 0.8);
    globalMap.updateSize();
});

//Resizes the map after a short delay.
window.onresize = function()
{
 setTimeout( 
  	function() { 
      	$('.front .map-container').css('height', $(window).height() * 0.8);
        globalMap.updateSize();
  	}, 
    200);
}